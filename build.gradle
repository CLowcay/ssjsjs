/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    testCompile 'junit:junit:4+'
}

version = '0.1';

ext.moduleName = 'ssjsjs';

compileJava {
	inputs.property("moduleName", moduleName)
	doFirst {
		options.compilerArgs = [
			'--module-path', classpath.asPath,
		]
		classpath = files()
	}
	options.encoding = 'UTF-8'
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

compileTestJava {
	inputs.property("moduleName", moduleName)
	doFirst {
		options.compilerArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'junit',
			'--add-reads', "$moduleName=junit",
			'--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
			'--add-exports',  "$moduleName/${moduleName}.test=junit"
		]
	}
	options.encoding = 'UTF-8'
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

test {
	inputs.property("moduleName", moduleName)
	doFirst {
		jvmArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'ALL-MODULE-PATH',
			'--add-reads', "$moduleName=junit",
			'--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
			'--add-exports',  "$moduleName/${moduleName}.test=junit"
		]
	}
}

